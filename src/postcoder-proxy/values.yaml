# Default values for postcoder-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

# https://external-secrets.io/ is available in citizensadvice EKS clusters
# where you can use vault, aws-paramter-store and aws-secret-manager stores
# to retrieve external secrets into kubernetes secrets and load them into
# the container environment variables
externalSecrets: &external_secrets_config
  enabled: false
  stores: {}

env:
  APP_ENV: production
  CACHE_TTL: '2592000'
  CACHE_URL: redis://redis-master:6379/1

image:
  repository: 979633842206.dkr.ecr.eu-west-1.amazonaws.com/postcoder
  pullPolicy: IfNotPresent
  # tag defaults to the chart app version
  # tag: v2.0.0

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  readOnlyRootFilesystem: false
  runAsUser: 1000
  runAsGroup: 1000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

redis:
  enabled: true
  # never change this
  fullnameOverride: redis
  architecture: standalone
  image:
    registry: docker.io
    repository: bitnami/redis
    pullPolicy: IfNotPresent
  auth:
    enabled: false
  master:
    extraFlags:
      - '--maxmemory 128mb'
      - '--maxmemory-policy allkeys-lru'
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        memory: 256Mi
    persistence:
      enabled: true
      size: 10Gi
